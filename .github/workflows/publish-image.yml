name: Build and Push Docker Images

on:
  # テストワークフローの完了後に実行
  workflow_run:
    workflows: ["Test Docker Images"]
    branches: [main]
    types: 
      - completed
  # 手動実行用
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the images'
        required: false
        default: ''

jobs:
  # 1. 並列ビルド設定 - 各イメージを別々のジョブで並列ビルド
  prepare:
    # workflow_runトリガーの場合、テストが成功した場合のみ実行
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Determine version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "value=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "value=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          fi

  build-base:
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. ビルドキャッシュの最適化
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # ビルダーインスタンスの設定強化
          buildkitd-flags: --debug
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. multi-stageビルドの最適化 - キャッシュマウントと依存関係の分離
      - name: Build and push base image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/base.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/psql-base:latest
            ghcr.io/${{ github.repository_owner }}/psql-base:${{ needs.prepare.outputs.version }}
          cache-from: |
            type=gha,scope=base-image
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/psql-base:buildcache
          cache-to: |
            type=gha,scope=base-image,mode=max
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/psql-base:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # ビルドの進行状況の詳細表示
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=Base PostgreSQL tools image

  build-migrator:
    runs-on: ubuntu-latest
    needs: [prepare, build-base]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push migrator image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/migrator.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/psql-migrator:latest
            ghcr.io/${{ github.repository_owner }}/psql-migrator:${{ needs.prepare.outputs.version }}
          cache-from: |
            type=gha,scope=migrator-image
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/psql-migrator:buildcache
          cache-to: |
            type=gha,scope=migrator-image,mode=max
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/psql-migrator:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=PostgreSQL migrator tool image

  build-dumper:
    runs-on: ubuntu-latest
    needs: [prepare, build-base]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push dumper image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/dumper.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/psql-dumper:latest
            ghcr.io/${{ github.repository_owner }}/psql-dumper:${{ needs.prepare.outputs.version }}
          cache-from: |
            type=gha,scope=dumper-image
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/psql-dumper:buildcache
          cache-to: |
            type=gha,scope=dumper-image,mode=max
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/psql-dumper:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=PostgreSQL dumper tool image

services:
  # PostgreSQL database for development and testing
  postgres:
    image: postgres:17-alpine
    container_name: postgres-tools-db
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d testdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO for S3-compatible storage testing
  minio:
    image: minio/minio:latest
    container_name: postgres-tools-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Helper service to create bucket in MinIO
  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/test-bucket;
      exit 0;
      "

  # Base image for other services
  base:
    build:
      context: .
      dockerfile: docker/base.Dockerfile
    image: ghcr.io/ukwhatn/psql-base:latest
  
  # Migrator service for testing
  migrator:
    build:
      context: .
      dockerfile: docker/migrator.Dockerfile
    image: ghcr.io/ukwhatn/psql-migrator:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_HOST: postgres
      POSTGRES_DB: testdb
    volumes:
      - ./alembic/versions:/app/alembic/versions

  # Dumper service for testing
  dumper:
    build:
      context: .
      dockerfile: docker/dumper.Dockerfile
    image: ghcr.io/ukwhatn/psql-dumper:latest
    depends_on:
      postgres:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_HOST: postgres
      POSTGRES_DB: testdb
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: test-bucket
      BACKUP_DIR: testdb-backups
      DUMPER_MODE: interactive

volumes:
  postgres-data:
  minio-data:
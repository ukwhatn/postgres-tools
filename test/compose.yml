services:
  postgres:
    container_name: test-postgres
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - test-network

  minio:
    container_name: test-minio
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    # イメージにwgetが含まれていないため、シンプルに起動して稼働中とみなす
    healthcheck:
      test: ["CMD", "sh", "-c", "[ -f /data/.minio.sys/format.json ]"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - minio-data:/data
    networks:
      - test-network

  mc:
    container_name: test-mc
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    # テスト中に利用できるようにコンテナを残す
    entrypoint: >
      /bin/sh -c "
      until (mc alias set local http://minio:9000 minioadmin minioadmin 2>/dev/null); do
        echo 'Waiting for MinIO to be ready...'
        sleep 2
      done &&
      mc mb local/test-bucket || true &&
      echo 'Bucket created successfully' &&
      mc ls local/ || true &&
      echo 'MinIO client ready. Container will stay running for tests.' &&
      tail -f /dev/null
      "
    networks:
      - test-network

  migrator:
    container_name: test-migrator
    image: ${MIGRATOR_IMAGE:-ghcr.io/ukwhatn/psql-migrator:latest}
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=test
    volumes:
      - ./alembic/versions:/app/versions
    networks:
      - test-network

  dumper:
    container_name: test-dumper
    image: ${DUMPER_IMAGE:-ghcr.io/ukwhatn/psql-dumper:latest}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=test
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=test-bucket
      - BACKUP_DIR=default
      - DUMPER_MODE=interactive
    # entrypointを無効化して、実行したまま維持
    entrypoint: ["/bin/bash", "-c", "touch /tmp/ready && tail -f /dev/null"]
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  postgres-data:
  minio-data: